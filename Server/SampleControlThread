private class ControlThread extends Thread
{
  private DatagramPacket packet;

  public ControlThread(DatagramPacket packet)
  {
    this.packet = packet;
  }

  @Override
  public void run()
  {
    byte[] msg = packet.getData();
    /*//Checks if request is valid (read or write)
    if(!(msg[0] == 0 && (msg[1] == 1 || msg[1] == 2)))
    {
      System.out.println("Request is invalid.");
      System.exit(1);
    }

    int zeroCount = 0;
    int count = 0;
    for(int i = 2; i < msg.length; i++)
    {
      if(zeroCount < 2)
      {
        if(msg[i] == 0 && count == 0)
        {
          System.out.println("Request is invalid.");
          System.exit(1);
        }
        else if(msg[i] == 0)
        {
          count = 0;
          zeroCount++;
        }
        else
        {
          count++;
        }
      }
      else
      {
        if(msg[i] != 0)
        {
          System.out.println("Request is invalid.");
          System.exit(1);
        }
      }
    }*/

    if(!checkIfValidPacket(msg)){
      if(verbose)
        System.out.println("Sending error packet . . .");
      createSendError(new Byte("4"), packet, receiveSocket, packet.getAddress(), "Invalid packet format: 0504 - Invalid packet. ");
    }
    //Extracts the filename
    int index = -1;
    for(int i = 2; i < msg.length; i++)
    {
      if(msg[i] == 0)
      {
        index = i;
        i = msg.length;
      }
    }
    byte[] b = new byte[index - 2];
    int j = 2;
    for(int i = 0; i < b.length; i++, j++)
    {
      b[i] = msg[j];
    }
    //Turns filename that is a byte array into a string
    String filename = new String(b);
    //Build "file" object from the specified filepath
    File f = new File(directory + "\\" + filename);
    Path path = Paths.get(directory + "\\" + filename);

    //If Else determine Read request or Write request
    //Creates new read thread with filename
    if(msg[1] == 1)
    {
      //Check if file exists
      if(!f.exists())
      {
        //System.out.println("Failed to read: 0501 - File not found. " + filename);
        if(verbose)
          System.out.println("Sending error packet . . .");
        createSendError(new Byte("1"), packet, receiveSocket, packet.getAddress(), "Failed to read: 0501 - File not found. " + filename);
      }
      //Check if the file can be read
      else if(!Files.isReadable(path)){
        //System.out.println("Failed to read: 0502 - Access Violation. " + filename);
        createSendError(new Byte("2"), packet, receiveSocket, packet.getAddress(), "Failed to read: 0502 - Access Violation. " + filename);
      }
      //No errors, send valid response
      else{
        if(verbose)
          System.out.println("The request is a valid read request.");
        addThread(new ReadThread(packet, filename));
      }
    }
    //Creates new write thread with filename
    else
    {
      //Check if the file already exists
       if(Files.exists(path)){
        if(verbose)
          System.out.println("Sending error packet . . .");
        createSendError(new Byte("6"), packet, receiveSocket, packet.getAddress(), "Failed to write: 0506 - File already exists " + filename);
      }
      //Check if can write
       else if(Files.isWritable(path)){
        if(verbose)
          System.out.println("Sending error packet . . .");
        createSendError(new Byte("2"), packet, receiveSocket, packet.getAddress(), "Failed to read: 0502 - Access Violation. " + filename);
      }
      //Check if there is enough space on the server
      else if(f.getParentFile().getFreeSpace() < packet.getData().length){
        if(verbose)
          System.out.println("Sending error packet . . .");
        createSendError(new Byte("3"), packet, receiveSocket, packet.getAddress(), "Failed to write: 0503 - Not enough disk space. " + filename);
      }

      else{
        if(verbose)
          System.out.println("The request is a valid write request.");
        addThread(new WriteThread(packet, filename));
      }
    }
    removeThread(this);
  }
}
